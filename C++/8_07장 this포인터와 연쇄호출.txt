this포인터와 연쇄호출
Chaining Member Functions

클래스를 붕어빵찍는 틀을 비유한다.
생성된 붕어빵은 인스턴스이다.

각인스턴스들을 구분하는 방법

this포인터는 클래스안에 숨어있다.
자기 자신의 주소를 알 수 있다.

클래스안에 함수들은 클래스가 선언될때마다 만들지 않는다.
함수가 하나만 선언되고 메모리주소와 인자값을 넣어주는 구조이다.


연쇄호출 Chaining Member Functions
체이닝함수

this포인터를 이용해 자기자신을 다시 호출한다.
체이닝함수는 한번에 여러번 선언할 수 있다.

#include <iostream>

using namespace std;

class Simple
{
private:
	int m_id;
public:
	Simple(const int &id)
		:m_id(id) {
		cout <<"this : "<< this << endl;
		//->포인터에 값을 넣는것
		this->m_id;
	}
	void setId(int id) {
		m_id = id;
	}
	int getId() {
		return m_id;
	}
	Simple& nextId() {
		m_id += 1;
		return *this;
	}
	void print() {
		cout << "nextId : " << m_id << endl;
	}
};
int main()
{
	Simple s1(1), s2(2);
	s1.setId(3);
	s2.setId(4);
	s2.print();
	/*
	체이닝함수 동작의 이해
	Simple& sim = s2.nextId();
	sim = s2.nextId();
	sim = s2.nextId();*/
	s2.nextId().nextId().nextId().print();

	cout << "&s1 : " << &s1 << " &s2 : " << &s2 << endl;
	return 0;
}
